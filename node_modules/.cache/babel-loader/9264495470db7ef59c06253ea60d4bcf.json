{"ast":null,"code":"var _jsxFileName = \"/Users/charlieyi/Desktop/ITP_404/Final_Project/src/Log.js\";\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nexport default function Log() {\n  const [name, setName] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const handleSubmit = async () => {\n    try {\n      // Encode the image data to base64\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result.split(\",\")[1];\n\n        // Send the data to the server\n        fetch(\"http://localhost:3003/slideshow\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: name,\n            date: date,\n            image: base64String\n          })\n        }).then(response => response.json()).then(data => {\n          console.log(data);\n          setSubmitted(true);\n        }).catch(error => {\n          console.error(\"Error submitting data:\", error);\n        });\n      };\n\n      // Read the image file as a data URL\n      reader.readAsDataURL(image);\n    } catch (error) {\n      console.error(\"Error handling submit:\", error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Log Game Night\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"date\",\n    value: date,\n    onChange: e => setDate(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Image:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"image\",\n    accept: \"image/*\",\n    onChange: e => setImage(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Submit\")), submitted && image && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Uploaded Image:\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: URL.createObjectURL(image),\n    alt: \"Uploaded\",\n    style: {\n      maxWidth: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","Log","name","setName","date","setDate","image","setImage","submitted","setSubmitted","handleSubmit","reader","FileReader","onloadend","base64String","result","split","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","readAsDataURL","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","value","onChange","e","target","required","accept","files","onClick","src","URL","createObjectURL","alt","style","maxWidth"],"sources":["/Users/charlieyi/Desktop/ITP_404/Final_Project/src/Log.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function Log() {\n  const [name, setName] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async () => {\n    try {\n      // Encode the image data to base64\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64String = reader.result.split(\",\")[1];\n  \n        // Send the data to the server\n        fetch(\"http://localhost:3003/slideshow\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name: name,\n            date: date,\n            image: base64String,\n          }),\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            console.log(data);\n            setSubmitted(true);\n          })\n          .catch((error) => {\n            console.error(\"Error submitting data:\", error);\n          });\n      };\n  \n      // Read the image file as a data URL\n      reader.readAsDataURL(image);\n    } catch (error) {\n      console.error(\"Error handling submit:\", error);\n    }\n  };\n  \n\n  return (\n    <div>\n      <div className=\"text\">\n        <h2>Log Game Night</h2>\n\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"date\">Date:</label>\n          <input\n            type=\"text\"\n            id=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n            required\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"image\">Image:</label>\n          <input\n            type=\"file\"\n            id=\"image\"\n            accept=\"image/*\"\n            onChange={(e) => setImage(e.target.files[0])}\n          />\n        </div>\n\n        <div>\n          <button type=\"button\" onClick={handleSubmit}>\n            Submit\n          </button>\n        </div>\n\n        {submitted && image && (\n          <div>\n            <h3>Uploaded Image:</h3>\n            <img\n              src={URL.createObjectURL(image)}\n              alt=\"Uploaded\"\n              style={{ maxWidth: \"100%\" }}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}